version: 2.1
jobs:
  unit_test:
    docker:
      - image: pennlabs/tox:d94aa67bd172351b25b8fd33308478be59f608ac
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Unit test
          command: |
            pip install tox
            pip install codecov
            tox
            codecov -t $TOKEN_CODECOV
  deploy_pypi:
    docker:
      - image: circleci/python:3.7
    description: |
      Publish the PyPI package
    steps:
      - restore_cache:
        key: v0-{{ .Branch }}-{{ checksum "setup.py" }}
      - run:
        command: |
          sudo pip install setuptools wheel twine
        name: Install dependencies
      - save_cache:
        key: v0-{{ .Branch }}-{{ checksum "setup.py" }}
        paths:
        - /usr/local/bin
        - /usr/local/lib/python3.7/site-packages
      - run:
        command: |
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
          echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
        name: Init .pypirc
      - run:
        command: |
          python3 setup.py sdist bdist_wheel
        name: Create packages
      - run:
        command: |
          twine upload dist/*
        name: Upload to pypi
  publish_prod:
    environment:
      IMAGE_NAME: mbouamama/myjwt/myjwt
    docker:
      - image: docker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image prod
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              DOCKER_TAG="latest"
            fi

            if [ -n "${CIRCLE_TAG}" ]; then
              DOCKER_TAG="$CIRCLE_TAG"
            fi
            echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_LOGIN --password-stdin docker.pkg.github.com
            docker build -t docker.pkg.github.com/$IMAGE_NAME:$DOCKER_TAG .
            docker push docker.pkg.github.com/$IMAGE_NAME:$DOCKER_TAG
workflows:
  deploy:
    jobs:
      - unit_test:
          context: myjwt
          filters:
            tags:
              only: /.*/
      - pypi/publish:
          context: myjwt
          filters:
            branches:
              ignore: /.*/
            tags:
              only: '/[0-9]+(\.[0-9]+)*/'
          requires:
            - unit_test
      - deploy_pypi:
          context: myjwt
          filters:
            branches:
              only: master
            tags:
              only: /.*/
          requires:
            - unit_test